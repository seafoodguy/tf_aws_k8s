#Ansible Jenkins Master, sample playbook - jenkins-master-sample.yml
---
- hosts: "{{ passed_in_hosts }}"
  #hosts: tag_Name_aws_sandbox_tf_1 
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: create the k8suser user account
      user: name=k8suser state=present createhome=yes shell=/bin/bash
      #user: name=k8suser append=yes groups=k8suser state=present createhome=yes shell=/bin/bash

    - name: create directory for each user
      file: 
        path: /home/k8suser/.ssh
        state: directory
        owner: k8suser
        group: k8suser
        mode: '0700'

    - name: allow 'k8suser' to use sudo without needing a password
      lineinfile:
        dest: /etc/sudoers
        line: 'k8suser ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: copy key file to specific location
      copy:
        src: id_rsa.pub
        dest: /home/k8suser/.ssh/authorized_keys
        owner: k8suser
        group: k8suser
        mode: '0600'

- hosts: "{{ passed_in_hosts }}"
  become: yes
  remote_user: k8suser
  become_user: root
  tasks:
    - name: Create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"
    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
               overlay
               br_netfilter
    - name: modprobe
      shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter
    - name: Set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"
    - name: Add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1
    - name: Apply new settings
      command: sudo sysctl --system
    - name: install containerd
      shell: |
               sudo yum update
               sudo yum install -y containerd
               sudo mkdir -p /etc/containerd
               sudo containerd config default | sudo tee /etc/containerd/config.toml
               sudo systemctl restart containerd
    - name: disable swap
      shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    - name: Create kubernetes repo file
      shell: |
               cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
               [kubernetes]
               name=Kubernetes
               baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
               enabled=1
               gpgcheck=1
               gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
               exclude=kubelet kubeadm kubectl
               EOF
    - name: install kubernetes
      shell: |
               sudo setenforce 0
               sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
               sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
               sudo systemctl enable --now kubelet
