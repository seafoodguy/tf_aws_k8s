#create master node
- hosts: tag_Name_aws_sandbox_tf_1 
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors all
      args:
        chdir: $HOME
        creates: cluster_initialized.txt
    - name: create .kube directory
      become: yes
      become_user: k8suser
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755  
    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/k8suser/.kube/config
        remote_src: yes
        owner: k8suser
        mode: 0600
    - name: install Pod network
      become: yes
      become_user: k8suser
      #shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE=10.244.0.0/16"
      args:
        chdir: $HOME
    - name: Get the token for joining the worker nodes
      become: yes
      become_user: k8suser
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command
    - name: Copy join command to local file.
      become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777

#Join Worker Nodes to Kubernetes Cluster using Ansible Playbook
- hosts: tag_Name_aws_sandbox_tf_2,tag_Name_aws_sandbox_tf_3,tag_Name_aws_sandbox_tf_4,tag_Name_aws_sandbox_tf_5
  remote_user: ec2-user
  become: yes
  become_user: root
  gather_facts: yes
  tasks:
   - name: Copy join command from Ansiblehost to the worker nodes.
     become: yes
     copy:
       src: /tmp/kubernetes_join_command
       dest: /tmp/kubernetes_join_command
       mode: 0777
   - name: Join the Worker nodes to the cluster.
     become: yes
     command: sh /tmp/kubernetes_join_command
     register: joined_or_not

#install rancher
- hosts: tag_Name_aws_sandbox_tf_1 
  remote_user: k8suser
  tasks:
    - name: install Rancher by Helm and Install cert-manager
      shell: |
               curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
               chmod 700 get_helm.sh
               ./get_helm.sh
               helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
               helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
               helm repo add jetstack https://charts.jetstack.io
               helm repo update
               kubectl create namespace cattle-system
               helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.5.1 --set installCRDs=true
               helm install rancher rancher-latest/rancher --namespace cattle-system --set hostname=aws-k8s.com --set bootstrapPassword=admin
               sleep 10
               kubectl patch svc rancher -n cattle-system -p '{"spec": {"type": "NodePort"}}'

#create variables in local host
- hosts: localhost
  become: yes
  become_user: root
  gather_facts: yes
  tasks:
    - name: set permission
      file:
        path: ../setlocalvar.sh
        mode: u+x
    - name: Run a script with arguments (using 'cmd' parameter)
      script:
        cmd: source ../setlocalvar.sh
